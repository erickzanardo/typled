name: release_app

on:
  push:
    tags:
      - '*'

jobs:
  create_version:
    name: Create Stork Version
    runs-on: ubuntu-latest

    steps:
      - uses: stork-delivery/create_version@main
        with:
          version: ${{ github.ref_name }}
          app-id: ${{ secrets.STORK_APP_ID }}
          api-key: ${{ secrets.STORK_API_KEY }}

  linux:
    needs: [create_version]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: typled_app

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
      - run: flutter build linux
      - name: Zips the build
        uses: papeloto/action-zip@v1
        with:
          files: typled_app/build/linux/x64/release/bundle/
          dest: linux.zip
      - name: Upload Binary
        uses: stork-delivery/upload_artifact@main
        with:
          version: ${{ github.ref_name }}
          app-id: ${{ secrets.STORK_APP_ID }}
          api-key: ${{ secrets.STORK_API_KEY }}
          platform: linux
          artifact-path: linux.zip
          fileName: linux.zip

  mac:
    needs: [create_version]
    runs-on: macos-latest

    defaults:
      run:
        shell: bash
        working-directory: typled_app

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter build macos
      - name: Zips the build
        run: cd build/macos/Build/Products/Release/ && zip -r osx.zip typled.app
      - name: Upload Binary
        uses: stork-delivery/upload_artifact@main
        with:
          version: ${{ github.ref_name }}
          app-id: ${{ secrets.STORK_APP_ID }}
          api-key: ${{ secrets.STORK_API_KEY }}
          platform: macos
          artifact-path: typled_app/build/macos/Build/Products/Release/osx.zip
          fileName: osx.zip

          #  windows:
          #    runs-on: windows-latest
          #
          #    defaults:
          #      run:
          #        shell: bash
          #        working-directory: fire_atlas_editor
          #
          #    steps:
          #      - uses: actions/checkout@v2
          #      - uses: subosito/flutter-action@v2
          #        with:
          #          channel: 'stable'
          #      - run: flutter config --enable-windows-desktop
          #      - run: flutter build windows
          #      - name: Zips the build
          #        uses: papeloto/action-zip@v1
          #        with:
          #          files: fire_atlas_editor/build/windows/runner/Release/
          #          dest: fa_windows.zip
          #      - name: Upload binary
          #        uses: actions/upload-artifact@v4
          #        with:
          #          name: fa_windows
          #          path: fa_windows.zip
